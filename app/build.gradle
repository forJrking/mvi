plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
}

apply from: "$rootDir/gradle/script/jacoco.gradle"
apply from: "$rootDir/gradle/script/screenshot.gradle"

android {
    compileSdkVersion 34
    namespace 'com.example.mvi'

    defaultConfig {
        applicationId "com.example.mvi"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.karumi.shot.ShotTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        vectorDrawables {
            useSupportLibrary true
        }
    }

//    signingConfigs {
//        debug {
//            keyAlias 'keystore'
//            keyPassword 'keystore'
//            storeFile file('../dev-keystore.jks')
//            storePassword 'keystore'
//        }
//    }

    buildTypes {
        release {
            minifyEnabled true
//            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
        compose true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.0"
    }

    kotlinOptions {
        jvmTarget = "11"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        variant.addJavaSourceFoldersToModel(
                new File(buildDir, "generated/ksp/${variant.name}/kotlin")
        )
    }
}

hilt {
    enableTransformForLocalTests = true
}

dependencies {
    // Jetpack Compose Integration
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
//    implementation 'androidx.compose.runtime:runtime-rxjava2'

    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.code.gson:gson:2.9.1'

    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha12'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':mvi')

    implementation 'io.github.raamcosta.compose-destinations:core:1.9.52'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.9.52'
    //region dagger hilt
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation 'com.google.dagger:hilt-android:2.47'
    kapt 'com.google.dagger:hilt-compiler:2.47'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.47'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.47'
    //endregion dagger hilt

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-preferences-core:1.0.0"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.1.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "androidx.core:core-testing:1.12.0"
    testImplementation 'app.cash.turbine:turbine:1.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.11.0"
    androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.5.3'
    // Allure support
//    androidTestImplementation "com.kaspersky.android-components:kaspresso-allure-support:1.5.3"
    // Jetpack Compose support
    androidTestImplementation "com.kaspersky.android-components:kaspresso-compose-support:1.5.3"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
}